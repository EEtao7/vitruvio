Optimization count:   1 
Robot class: ANYmalBear.
Task: trotSwing5.
Actuator HAA: ANYdrive.
Actuator HFE: ANYdrive.
Actuator KFE: ANYdrive.
Links: hip, thigh, shank.
Hip parallel to body, serial leg configuration. 

Loading robot properties for ANYmalBear.
Loading actuator properties 
Computing motion of end effectors relative to hip attachment points. 
Computing end effector liftoff and touchdown timings. 
Computing joint angles using inverse kinematics.
Creating and visualizing robot rigid body model. 
Computing joint velocities and accelerations. 
Computing joint torques using inverse dynamics. 
Computing joint power. 
Computing active and passive torque due to springs in parallel with joints. 
Computing actuator torque and speed due to transmission between actuator and joint. 
Computing actuator efficiency map. 
Computing electrical power and motor operating point efficiency. 
Computing meta parameters. 

Initiating optimization of link lengths for LF
Bounds on hip length [0.11, 0.11] 
Bounds on thigh length [0.12, 0.50] 
Bounds on shank length [0.17, 0.66] 
Bounds on nominal hip position translation x direction [-0.20, -0.20] 
Bounds on HAA transmission gear ratio [1.00, 1.00] 
Bounds on HFE transmission gear ratio [1.00, 1.00] 
Bounds on KFE transmission gear ratio [0.50, 2.00] 
Running optimization. Population: 10, Max Generations: 10

                                  Best           Mean      Stall
Generation      Func-count        f(x)           f(x)    Generations
    1               20           1.937           27.85        0
    2               30           1.694           15.88        0
    3               40           1.694           21.49        1
    4               50           1.694           21.48        2
    5               60           1.694           2.912        3
    6               70           1.694           2.863        4
    7               80           1.694           11.65        5
    8               90           1.694           1.795        6
    9              100           1.694           1.784        7
   10              110           1.694           1.729        8
Optimization terminated: maximum number of generations exceeded.
Final penalty function value: 1.6936
Optimized leg design parameters :    0.1120    0.2921    0.2471   -0.2050    1.0000    1.0000    1.3670

Saving optimization results. 

T =

  8×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                              <strong>      Basic_Properties      </strong>
                              <strong>____________________________</strong>

    <strong>Robot class           </strong>    "ANYmalBear"                
    <strong>Task                  </strong>    "trotSwing5"                
    <strong>Leg quantity          </strong>    "4"                         
    <strong>Link names            </strong>    "hip thigh shank"           
    <strong>Joint names           </strong>    "HAA HFE KFE"               
    <strong>Actuator selection    </strong>    "ANYdrive ANYdrive ANYdrive"
    <strong>Joint actuation method</strong>    "direct direct direct"      
    <strong>Transmission method   </strong>    "N/A N/A N/A"               


T =

  10×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                                            <strong>            Optimization_Properties            </strong>
                                                            <strong>_______________________________________________</strong>

    <strong>Optimized legs                                      </strong>    " LF"                                          
    <strong>Number of generations                               </strong>    "10"                                           
    <strong>Population size                                     </strong>    "10"                                           
    <strong>Allowable leg extension/Total possible leg extension</strong>    "0.95"                                         
    <strong>Constraint1                                         </strong>    "Impose max actuator torque limit"             
    <strong>Constraint2                                         </strong>    "Impose max actuator speed limit"              
    <strong>Constraint3                                         </strong>    "Impose max actuator power limit"              
    <strong>Cost1                                               </strong>    "Penalize max torque"                          
    <strong>Cost2                                               </strong>    "Penalize mechanical cost of transport"        
    <strong>Cost3                                               </strong>    "Penalize leg extension beyond allowable limit"


T =

  12×2 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>       Nominal_Leg        </strong><strong>          Optimized_Leg       </strong>
                                               <strong>__________________________</strong>    <strong>__________________________</strong>

    <strong>Leg                                    </strong>    "LF"                          "LF"                      
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"             "0.112 0.29214 0.24713"   
    <strong>Link mass [kg]                         </strong>    "0.74347 1.0301 0.2072"       "0.74347 1.2037 0.15517"  
    <strong>Maximum joint torque [Nm]              </strong>    "1.68595 23.6121 63.8956"     "3.81009 23.5175 56.3029" 
    <strong>Maximum joint speed [rad/s]            </strong>    "0.75855 6.799 7.0632"        "0.75855 5.6962 8.1434"   
    <strong>Maximum mechanical power [W]           </strong>    "0.888743 93.2237 74.7396"    "1.63336 78.1951 79.9003" 
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.366497 56.3926 54.9474"    "0.642901 54.4004 58.8239"
    <strong>Cost of transport                      </strong>    "0.15727"                     "0.16031"                 
    <strong>Power quality                          </strong>    "4876851.6203"                "4749355.6682"            
    <strong>Joint angle range [rad]                </strong>    "0.08767 0.54579 0.58352"     "0.08767 0.47108 0.67662" 
    <strong>Transmission gear ratio                </strong>    "1 1 1"                       "1 1 1.367"               
    <strong>Joint spring constants                 </strong>    "0 0 0"                       "0 0 0"                   


T =

  12×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>        Nominal_Leg         </strong>
                                               <strong>____________________________</strong>

    <strong>Leg                                    </strong>    "RF"                        
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"           
    <strong>Link mass [kg]                         </strong>    "0.74347 1.0301 0.2072"     
    <strong>Maximum joint torque [Nm]              </strong>    "2.42868 24.6944 66.0966"   
    <strong>Maximum joint speed [rad/s]            </strong>    "0.77405 7.2217 7.6863"     
    <strong>Maximum mechanical power [W]           </strong>    "1.477002 103.1369 37.40675"
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.654771 58.979 37.7654"   
    <strong>Cost of transport                      </strong>    "0.13714"                   
    <strong>Power quality                          </strong>    "-372514.1681"              
    <strong>Joint angle range [rad]                </strong>    "0.076524 0.57813 0.59632"  
    <strong>Transmission gear ratio                </strong>    "1 1 1"                     
    <strong>Joint spring constants                 </strong>    "0 0 0"                     


T =

  12×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>       Nominal_Leg        </strong>
                                               <strong>__________________________</strong>

    <strong>Leg                                    </strong>    "LH"                      
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"         
    <strong>Link mass [kg]                         </strong>    "0.070322 0.15697 0.2072" 
    <strong>Maximum joint torque [Nm]              </strong>    "1.90707 16.5645 58.4529" 
    <strong>Maximum joint speed [rad/s]            </strong>    "0.7409 6.9755 8.0103"    
    <strong>Maximum mechanical power [W]           </strong>    "0.600376 46.7055 52.9366"
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.29569 16.3603 52.8452" 
    <strong>Cost of transport                      </strong>    "0.09799"                 
    <strong>Power quality                          </strong>    "5857722.1173"            
    <strong>Joint angle range [rad]                </strong>    "0.075026 0.56287 0.6364" 
    <strong>Transmission gear ratio                </strong>    "1 1 1"                   
    <strong>Joint spring constants                 </strong>    "0 0 0"                   


T =

  12×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>       Nominal_Leg        </strong>
                                               <strong>__________________________</strong>

    <strong>Leg                                    </strong>    "RH"                      
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"         
    <strong>Link mass [kg]                         </strong>    "0.070322 0.15697 0.2072" 
    <strong>Maximum joint torque [Nm]              </strong>    "1.90338 16.2175 55.4021" 
    <strong>Maximum joint speed [rad/s]            </strong>    "0.72385 6.7469 7.9264"   
    <strong>Maximum mechanical power [W]           </strong>    "0.603235 42.2474 61.5003"
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.277541 15.2449 59.5818"
    <strong>Cost of transport                      </strong>    "0.10579"                 
    <strong>Power quality                          </strong>    "6877987.8365"            
    <strong>Joint angle range [rad]                </strong>    "0.066762 0.54227 0.71757"
    <strong>Transmission gear ratio                </strong>    "1 1 1"                   
    <strong>Joint spring constants                 </strong>    "0 0 0"                   

Optimization count:   2 
Robot class: ANYmalBear.
Task: trotSwing5.
Actuator HAA: ANYdrive.
Actuator HFE: ANYdrive.
Actuator KFE: ANYdrive.
Links: hip, thigh, shank.
Hip parallel to body, serial leg configuration. 

Loading robot properties for ANYmalBear.
Loading actuator properties 
Computing motion of end effectors relative to hip attachment points. 
Computing end effector liftoff and touchdown timings. 
Computing joint angles using inverse kinematics.
Creating and visualizing robot rigid body model. 
Computing joint velocities and accelerations. 
Computing joint torques using inverse dynamics. 
Computing joint power. 
Computing active and passive torque due to springs in parallel with joints. 
Computing actuator torque and speed due to transmission between actuator and joint. 
Computing actuator efficiency map. 
Computing electrical power and motor operating point efficiency. 
Computing meta parameters. 

Initiating optimization of link lengths for LF
Bounds on hip length [0.11, 0.11] 
Bounds on thigh length [0.12, 0.50] 
Bounds on shank length [0.17, 0.66] 
Bounds on nominal hip position translation x direction [-0.20, -0.20] 
Bounds on HAA transmission gear ratio [1.00, 1.00] 
Bounds on HFE transmission gear ratio [1.00, 1.00] 
Bounds on KFE transmission gear ratio [0.50, 2.00] 
Running optimization. Population: 10, Max Generations: 10

                                  Best           Mean      Stall
Generation      Func-count        f(x)           f(x)    Generations
    1               20            1.72           15.56        0
    2               30            1.72           13.18        1
    3               40            1.72           21.66        2
    4               50           1.679            3.15        0
    5               60           1.679           1.984        1
    6               70           1.679           1.884        2
{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('distcomp.remoteparfor/getCompleteIntervals', '/Applications/MATLAB_R2017b.app/toolbox/distcomp/distcomp/+distcomp/remoteparfor.m', 225)" style="font-weight:bold">distcomp.remoteparfor/getCompleteIntervals</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/distcomp/distcomp/+distcomp/remoteparfor.m',225,0)">line 225</a>)


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function>distributed_execution', '/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p', 823)" style="font-weight:bold">parallel_function>distributed_execution</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p',823,0)">line 823</a>)
        [tags, out] = P.getCompleteIntervals(chunkSize);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function', '/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p', 590)" style="font-weight:bold">parallel_function</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p',590,0)">line 590</a>)
        R = distributed_execution(...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('fcnvectorizer', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/fcnvectorizer.m', 16)" style="font-weight:bold">fcnvectorizer</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/fcnvectorizer.m',16,0)">line 16</a>)
        parfor (i = 1:popSize)

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('stepGA', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/stepGA.m', 44)" style="font-weight:bold">stepGA</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/stepGA.m',44,0)">line 44</a>)
    nextScore = fcnvectorizer(nextPopulation,FitnessFcn,1,options.SerialUserFcn);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('galincon', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/galincon.m', 62)" style="font-weight:bold">galincon</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/galincon.m',62,0)">line 62</a>)
        [score,population,state] = stepGA(score,population,options,state,GenomeLength,FitnessFcn);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ga', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/ga.m', 374)" style="font-weight:bold">ga</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/ga.m',374,0)">line 374</a>)
            [x,fval,exitFlag,output,population,scores] = galincon(FitnessFcn,nvars, ...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('evolveOptimalLeg', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m', 53)" style="font-weight:bold">evolveOptimalLeg</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m',53,0)">line 53</a>)
 [legDesignParameters, penaltyMin, ~, output] = ga(costFcn,length(legDesignParameters),[],[],[],[], ...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('evolveAndVisualizeOptimalLeg', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveAndVisualizeOptimalLeg.m', 181)" style="font-weight:bold">evolveAndVisualizeOptimalLeg</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveAndVisualizeOptimalLeg.m',181,0)">line 181</a>)
[legDesignParameters, penaltyMin, output] = evolveOptimalLeg(actuatorProperties, imposeJointLimits, heuristic,
upperBound, lowerBound, actuateJointDirectly, hipAttachmentOffset, linkCount, optimizationProperties,
initialLinkLengths, taskSelection, robotProperties, configSelection, EEselection, dt, meanCyclicMotionHipEE,
hipParalleltoBody, Leg, actuatorEfficiency, actuatorSelection, dataExtraction, jointNames,
springInParallelWithJoints, kSpringJoint, q0SpringJoint);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('runDataExtractionAndOptScripts', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/runDataExtractionAndOptScripts.m', 523)" style="font-weight:bold">runDataExtractionAndOptScripts</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/runDataExtractionAndOptScripts.m',523,0)">line 523</a>)
            optimizationResults = evolveAndVisualizeOptimalLeg(actuatorProperties, imposeJointLimits, heuristic,
            actuateJointDirectly, Leg.(EEselection).hipAttachmentOffset, linkCount, optimizationProperties,
            EEselection, meanCyclicMotionHipEE, robotProperties, configSelection, dt, dataSelection,
            hipParalleltoBody, Leg, actuatorEfficiency, actuatorSelection, dataExtraction, jointNames,
            saveFiguresToPDF, springInParallelWithJoints, kSpringJoint, q0SpringJoint);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulateSelectedTasks', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/simulateSelectedTasks.m', 377)" style="font-weight:bold">simulateSelectedTasks</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/simulateSelectedTasks.m',377,0)">line 377</a>)
        results.(classSelection).(task)(optimizationNumber) = runDataExtractionAndOptScripts(actuatorSelection,
        dataExtraction, imposeJointLimits, heuristic, actuateJointDirectly, transmissionMethod,
        robotVisualization, linkCount, optimizeLeg, optimizationProperties, dataSelection, classSelection,
        configSelection, hipParalleltoBody, legCount, task, saveFiguresToPDF, springInParallelWithJoints,
        kSpringJoint, payload);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('main', '/Users/michaelchadwick/Documents/git/vitruvio/main.m', 250)" style="font-weight:bold">main</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/main.m',250,0)">line 250</a>)
simulateSelectedTasks;
} 
clc
main
Optimization count:   1 
Robot class: ANYmalBear.
Task: trotSwing5.
Actuator HAA: ANYdrive.
Actuator HFE: ANYdrive.
Actuator KFE: ANYdrive.
Links: hip, thigh, shank.
Hip parallel to body, serial leg configuration. 

Loading robot properties for ANYmalBear.
Loading actuator properties 
Computing motion of end effectors relative to hip attachment points. 
Computing end effector liftoff and touchdown timings. 
Computing joint angles using inverse kinematics.
Creating and visualizing robot rigid body model. 
Computing joint velocities and accelerations. 
Computing joint torques using inverse dynamics. 
Computing joint power. 
Computing active and passive torque due to springs in parallel with joints. 
Computing actuator torque and speed due to transmission between actuator and joint. 
Computing actuator efficiency map. 
Computing electrical power and motor operating point efficiency. 
Computing meta parameters. 

Initiating optimization of link lengths for LF
Bounds on hip length [0.11, 0.11] 
Bounds on thigh length [0.12, 0.50] 
Bounds on shank length [0.17, 0.66] 
Bounds on nominal hip position translation x direction [-0.20, -0.20] 
Bounds on HAA transmission gear ratio [1.00, 1.00] 
Bounds on HFE transmission gear ratio [1.00, 1.00] 
Bounds on KFE transmission gear ratio [0.50, 2.00] 
Running optimization. Population: 20, Max Generations: 10

                                  Best           Mean      Stall
Generation      Func-count        f(x)           f(x)    Generations
    1               40           1.857            19.9        0
    2               60           1.682            14.1        0
{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('distcomp.remoteparfor/getCompleteIntervals', '/Applications/MATLAB_R2017b.app/toolbox/distcomp/distcomp/+distcomp/remoteparfor.m', 225)" style="font-weight:bold">distcomp.remoteparfor/getCompleteIntervals</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/distcomp/distcomp/+distcomp/remoteparfor.m',225,0)">line 225</a>)


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function>distributed_execution', '/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p', 823)" style="font-weight:bold">parallel_function>distributed_execution</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p',823,0)">line 823</a>)
        [tags, out] = P.getCompleteIntervals(chunkSize);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function', '/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p', 590)" style="font-weight:bold">parallel_function</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/matlab/lang/parallel_function.p',590,0)">line 590</a>)
        R = distributed_execution(...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('fcnvectorizer', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/fcnvectorizer.m', 16)" style="font-weight:bold">fcnvectorizer</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/fcnvectorizer.m',16,0)">line 16</a>)
        parfor (i = 1:popSize)

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('stepGA', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/stepGA.m', 44)" style="font-weight:bold">stepGA</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/stepGA.m',44,0)">line 44</a>)
    nextScore = fcnvectorizer(nextPopulation,FitnessFcn,1,options.SerialUserFcn);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('galincon', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/galincon.m', 62)" style="font-weight:bold">galincon</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/galincon.m',62,0)">line 62</a>)
        [score,population,state] = stepGA(score,population,options,state,GenomeLength,FitnessFcn);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ga', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/ga.m', 374)" style="font-weight:bold">ga</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/ga.m',374,0)">line 374</a>)
            [x,fval,exitFlag,output,population,scores] = galincon(FitnessFcn,nvars, ...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('evolveOptimalLeg', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m', 53)" style="font-weight:bold">evolveOptimalLeg</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m',53,0)">line 53</a>)
 [legDesignParameters, penaltyMin, ~, output] = ga(costFcn,length(legDesignParameters),[],[],[],[], ...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('evolveAndVisualizeOptimalLeg', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveAndVisualizeOptimalLeg.m', 181)" style="font-weight:bold">evolveAndVisualizeOptimalLeg</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveAndVisualizeOptimalLeg.m',181,0)">line 181</a>)
[legDesignParameters, penaltyMin, output] = evolveOptimalLeg(actuatorProperties, imposeJointLimits, heuristic,
upperBound, lowerBound, actuateJointDirectly, hipAttachmentOffset, linkCount, optimizationProperties,
initialLinkLengths, taskSelection, robotProperties, configSelection, EEselection, dt, meanCyclicMotionHipEE,
hipParalleltoBody, Leg, actuatorEfficiency, actuatorSelection, dataExtraction, jointNames,
springInParallelWithJoints, kSpringJoint, q0SpringJoint);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('runDataExtractionAndOptScripts', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/runDataExtractionAndOptScripts.m', 523)" style="font-weight:bold">runDataExtractionAndOptScripts</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/runDataExtractionAndOptScripts.m',523,0)">line 523</a>)
            optimizationResults = evolveAndVisualizeOptimalLeg(actuatorProperties, imposeJointLimits, heuristic,
            actuateJointDirectly, Leg.(EEselection).hipAttachmentOffset, linkCount, optimizationProperties,
            EEselection, meanCyclicMotionHipEE, robotProperties, configSelection, dt, dataSelection,
            hipParalleltoBody, Leg, actuatorEfficiency, actuatorSelection, dataExtraction, jointNames,
            saveFiguresToPDF, springInParallelWithJoints, kSpringJoint, q0SpringJoint);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulateSelectedTasks', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/simulateSelectedTasks.m', 377)" style="font-weight:bold">simulateSelectedTasks</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/simulateSelectedTasks.m',377,0)">line 377</a>)
        results.(classSelection).(task)(optimizationNumber) = runDataExtractionAndOptScripts(actuatorSelection,
        dataExtraction, imposeJointLimits, heuristic, actuateJointDirectly, transmissionMethod,
        robotVisualization, linkCount, optimizeLeg, optimizationProperties, dataSelection, classSelection,
        configSelection, hipParalleltoBody, legCount, task, saveFiguresToPDF, springInParallelWithJoints,
        kSpringJoint, payload);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('main', '/Users/michaelchadwick/Documents/git/vitruvio/main.m', 250)" style="font-weight:bold">main</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/main.m',250,0)">line 250</a>)
simulateSelectedTasks;
} 
clc
main
Optimization count:   1 
Robot class: ANYmalBear.
Task: trotSwing5.
Actuator HAA: ANYdrive.
Actuator HFE: ANYdrive.
Actuator KFE: ANYdrive.
Links: hip, thigh, shank.
Hip parallel to body, serial leg configuration. 

Loading robot properties for ANYmalBear.
Loading actuator properties 
Computing motion of end effectors relative to hip attachment points. 
Computing end effector liftoff and touchdown timings. 
Computing joint angles using inverse kinematics.
Creating and visualizing robot rigid body model. 
Computing joint velocities and accelerations. 
Computing joint torques using inverse dynamics. 
Computing joint power. 
Computing active and passive torque due to springs in parallel with joints. 
Computing actuator torque and speed due to transmission between actuator and joint. 
Computing actuator efficiency map. 
Computing electrical power and motor operating point efficiency. 
Computing meta parameters. 

Initiating optimization of link lengths for LF
Bounds on hip length [0.11, 0.11] 
Bounds on thigh length [0.12, 0.50] 
Bounds on shank length [0.17, 0.66] 
Bounds on nominal hip position translation x direction [-0.20, -0.20] 
Bounds on HAA transmission gear ratio [1.00, 1.00] 
Bounds on HFE transmission gear ratio [1.00, 1.00] 
Bounds on KFE transmission gear ratio [0.50, 2.00] 
Running optimization. Population: 20, Max Generations: 10
{Undefined function or variable 'mechCoT'.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('computePenalty', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/computePenalty.m', 567)" style="font-weight:bold">computePenalty</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/computePenalty.m',567,0)">line 567</a>)
                  W_mechCoT             * (mechCoT/mechCoTInitial)          + ...

Error in
<a href="matlab:matlab.internal.language.introspective.errorDocCallback('evolveOptimalLeg>@(legDesignParameters)computePenalty(actuatorProperties,imposeJointLimits,heuristic,legDesignParameters,actuateJointDirectly,linkCount,optimizationProperties,robotProperties,selectFrontHind,taskSelection,dt,configSelection,EEselection,meanCyclicMotionHipEE,hipParalleltoBody,Leg,actuatorEfficiency,actuatorSelection,dataExtraction,springInParallelWithJoints,kSpringJoint,q0SpringJoint)', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m', 45)" style="font-weight:bold">evolveOptimalLeg>@(legDesignParameters)computePenalty(actuatorProperties,imposeJointLimits,heuristic,legDesignParameters,actuateJointDirectly,linkCount,optimizationProperties,robotProperties,selectFrontHind,taskSelection,dt,configSelection,EEselection,meanCyclicMotionHipEE,hipParalleltoBody,Leg,actuatorEfficiency,actuatorSelection,dataExtraction,springInParallelWithJoints,kSpringJoint,q0SpringJoint)</a>
(<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m',45,0)">line 45</a>)
costFcn = @(legDesignParameters)computePenalty(actuatorProperties, imposeJointLimits, heuristic,
legDesignParameters, actuateJointDirectly, linkCount, optimizationProperties, robotProperties, selectFrontHind,
taskSelection, dt, configSelection, EEselection, meanCyclicMotionHipEE, hipParalleltoBody, Leg,
actuatorEfficiency, actuatorSelection, dataExtraction, springInParallelWithJoints, kSpringJoint, q0SpringJoint);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('createAnonymousFcn>@(x)fcn(x,FcnArgs{:})', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/createAnonymousFcn.m', 11)" style="font-weight:bold">createAnonymousFcn>@(x)fcn(x,FcnArgs{:})</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/createAnonymousFcn.m',11,0)">line 11</a>)
fcn_handle = @(x) fcn(x,FcnArgs{:});

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('makeState', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/makeState.m', 47)" style="font-weight:bold">makeState</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/makeState.m',47,0)">line 47</a>)
            firstMemberScore = FitnessFcn(state.Population(initScoreProvided+1,:));

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('galincon', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/galincon.m', 17)" style="font-weight:bold">galincon</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/galincon.m',17,0)">line 17</a>)
state = makeState(GenomeLength,FitnessFcn,Iterate,output.problemtype,options);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ga', '/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/ga.m', 374)" style="font-weight:bold">ga</a> (<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/ga.m',374,0)">line 374</a>)
            [x,fval,exitFlag,output,population,scores] = galincon(FitnessFcn,nvars, ...

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('evolveOptimalLeg', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m', 53)" style="font-weight:bold">evolveOptimalLeg</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveOptimalLeg.m',53,0)">line 53</a>)
 [legDesignParameters, penaltyMin, ~, output] = ga(costFcn,length(legDesignParameters),[],[],[],[], ...

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('evolveAndVisualizeOptimalLeg', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveAndVisualizeOptimalLeg.m', 181)" style="font-weight:bold">evolveAndVisualizeOptimalLeg</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/evolveAndVisualizeOptimalLeg.m',181,0)">line 181</a>)
[legDesignParameters, penaltyMin, output] = evolveOptimalLeg(actuatorProperties, imposeJointLimits, heuristic,
upperBound, lowerBound, actuateJointDirectly, hipAttachmentOffset, linkCount, optimizationProperties,
initialLinkLengths, taskSelection, robotProperties, configSelection, EEselection, dt, meanCyclicMotionHipEE,
hipParalleltoBody, Leg, actuatorEfficiency, actuatorSelection, dataExtraction, jointNames,
springInParallelWithJoints, kSpringJoint, q0SpringJoint);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('runDataExtractionAndOptScripts', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/runDataExtractionAndOptScripts.m', 523)" style="font-weight:bold">runDataExtractionAndOptScripts</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/runDataExtractionAndOptScripts.m',523,0)">line 523</a>)
            optimizationResults = evolveAndVisualizeOptimalLeg(actuatorProperties, imposeJointLimits, heuristic,
            actuateJointDirectly, Leg.(EEselection).hipAttachmentOffset, linkCount, optimizationProperties,
            EEselection, meanCyclicMotionHipEE, robotProperties, configSelection, dt, dataSelection,
            hipParalleltoBody, Leg, actuatorEfficiency, actuatorSelection, dataExtraction, jointNames,
            saveFiguresToPDF, springInParallelWithJoints, kSpringJoint, q0SpringJoint);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulateSelectedTasks', '/Users/michaelchadwick/Documents/git/vitruvio/scripts/simulateSelectedTasks.m', 377)" style="font-weight:bold">simulateSelectedTasks</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/simulateSelectedTasks.m',377,0)">line 377</a>)
        results.(classSelection).(task)(optimizationNumber) = runDataExtractionAndOptScripts(actuatorSelection,
        dataExtraction, imposeJointLimits, heuristic, actuateJointDirectly, transmissionMethod,
        robotVisualization, linkCount, optimizeLeg, optimizationProperties, dataSelection, classSelection,
        configSelection, hipParalleltoBody, legCount, task, saveFiguresToPDF, springInParallelWithJoints,
        kSpringJoint, payload);

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('main', '/Users/michaelchadwick/Documents/git/vitruvio/main.m', 250)" style="font-weight:bold">main</a> (<a href="matlab: opentoline('/Users/michaelchadwick/Documents/git/vitruvio/main.m',250,0)">line 250</a>)
simulateSelectedTasks;

Caused by:
    Failure in initial user-supplied fitness function evaluation. GA cannot continue.
} 
<a href="matlab: opentoline('/Applications/MATLAB_R2017b.app/toolbox/globaloptim/globaloptim/private/makeState.m',52,1)">52  </a>            rethrow(userFcn_ME)
opentoline('/Users/michaelchadwick/Documents/git/vitruvio/scripts/optimization/computePenalty.m',567,0)
if system_dependent('IsDebugMode')==1, dbquit; end
clc
main
Optimization count:   1 
Robot class: ANYmalBear.
Task: trotSwing5.
Actuator HAA: ANYdrive.
Actuator HFE: ANYdrive.
Actuator KFE: ANYdrive.
Links: hip, thigh, shank.
Hip parallel to body, serial leg configuration. 

Loading robot properties for ANYmalBear.
Loading actuator properties 
Computing motion of end effectors relative to hip attachment points. 
Computing end effector liftoff and touchdown timings. 
Computing joint angles using inverse kinematics.
Creating and visualizing robot rigid body model. 
Computing joint velocities and accelerations. 
Computing joint torques using inverse dynamics. 
Computing joint power. 
Computing active and passive torque due to springs in parallel with joints. 
Computing actuator torque and speed due to transmission between actuator and joint. 
Computing actuator efficiency map. 
Computing electrical power and motor operating point efficiency. 
Computing meta parameters. 

Initiating optimization of link lengths for LF
Bounds on hip length [0.11, 0.11] 
Bounds on thigh length [0.12, 0.50] 
Bounds on shank length [0.17, 0.66] 
Bounds on nominal hip position translation x direction [-0.20, -0.20] 
Bounds on HAA transmission gear ratio [1.00, 1.00] 
Bounds on HFE transmission gear ratio [1.00, 1.00] 
Bounds on KFE transmission gear ratio [0.50, 2.00] 
Running optimization. Population: 20, Max Generations: 10

                                  Best           Mean      Stall
Generation      Func-count        f(x)           f(x)    Generations
    1               40          0.6213           14.59        0
    2               60          0.6213           14.29        1
    3               80          0.6213           8.237        2
    4              100          0.6213           6.589        3
    5              120          0.6213          0.9399        4
    6              140          0.6213           5.771        5
    7              160          0.6213           15.69        6
    8              180          0.6213          0.8115        7
    9              200          0.6033           5.702        0
   10              220          0.6033           5.616        1
Optimization terminated: maximum number of generations exceeded.
Final penalty function value: 0.60328
Optimized leg design parameters :    0.1120    0.2662    0.2700   -0.2050    1.0000    1.0000    1.4588

Saving optimization results. 

T =

  8×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                              <strong>      Basic_Properties      </strong>
                              <strong>____________________________</strong>

    <strong>Robot class           </strong>    "ANYmalBear"                
    <strong>Task                  </strong>    "trotSwing5"                
    <strong>Leg quantity          </strong>    "4"                         
    <strong>Link names            </strong>    "hip thigh shank"           
    <strong>Joint names           </strong>    "HAA HFE KFE"               
    <strong>Actuator selection    </strong>    "ANYdrive ANYdrive ANYdrive"
    <strong>Joint actuation method</strong>    "direct direct direct"      
    <strong>Transmission method   </strong>    "N/A N/A N/A"               


T =

  9×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                                            <strong>            Optimization_Properties            </strong>
                                                            <strong>_______________________________________________</strong>

    <strong>Optimized legs                                      </strong>    " LF"                                          
    <strong>Number of generations                               </strong>    "10"                                           
    <strong>Population size                                     </strong>    "20"                                           
    <strong>Allowable leg extension/Total possible leg extension</strong>    "0.95"                                         
    <strong>Constraint1                                         </strong>    "Impose max actuator torque limit"             
    <strong>Constraint2                                         </strong>    "Impose max actuator speed limit"              
    <strong>Constraint3                                         </strong>    "Impose max actuator power limit"              
    <strong>Cost1                                               </strong>    "Penalize max torque"                          
    <strong>Cost2                                               </strong>    "Penalize leg extension beyond allowable limit"


T =

  12×2 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>       Nominal_Leg        </strong><strong>          Optimized_Leg       </strong>
                                               <strong>__________________________</strong>    <strong>__________________________</strong>

    <strong>Leg                                    </strong>    "LF"                          "LF"                      
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"             "0.112 0.26624 0.26996"   
    <strong>Link mass [kg]                         </strong>    "0.74347 1.0301 0.2072"       "0.74347 1.097 0.1695"    
    <strong>Maximum joint torque [Nm]              </strong>    "1.68595 23.6121 63.8956"     "2.88861 22.6376 56.2333" 
    <strong>Maximum joint speed [rad/s]            </strong>    "0.75855 6.799 7.0632"        "0.75855 6.38 8.2028"     
    <strong>Maximum mechanical power [W]           </strong>    "0.888743 93.2237 74.7396"    "1.31113 85.1391 80.2846" 
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.366497 56.3926 54.9474"    "0.525085 56.2713 58.9968"
    <strong>Cost of transport                      </strong>    "0.15727"                     "0.16302"                 
    <strong>Power quality                          </strong>    "4876851.6203"                "4497795.7291"            
    <strong>Joint angle range [rad]                </strong>    "0.08767 0.54579 0.58352"     "0.08767 0.51678 0.68203" 
    <strong>Transmission gear ratio                </strong>    "1 1 1"                       "1 1 1.4588"              
    <strong>Joint spring constants                 </strong>    "0 0 0"                       "0 0 0"                   


T =

  12×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>        Nominal_Leg         </strong>
                                               <strong>____________________________</strong>

    <strong>Leg                                    </strong>    "RF"                        
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"           
    <strong>Link mass [kg]                         </strong>    "0.74347 1.0301 0.2072"     
    <strong>Maximum joint torque [Nm]              </strong>    "2.42868 24.6944 66.0966"   
    <strong>Maximum joint speed [rad/s]            </strong>    "0.77405 7.2217 7.6863"     
    <strong>Maximum mechanical power [W]           </strong>    "1.477002 103.1369 37.40675"
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.654771 58.979 37.7654"   
    <strong>Cost of transport                      </strong>    "0.13714"                   
    <strong>Power quality                          </strong>    "-372514.1681"              
    <strong>Joint angle range [rad]                </strong>    "0.076524 0.57813 0.59632"  
    <strong>Transmission gear ratio                </strong>    "1 1 1"                     
    <strong>Joint spring constants                 </strong>    "0 0 0"                     


T =

  12×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>       Nominal_Leg        </strong>
                                               <strong>__________________________</strong>

    <strong>Leg                                    </strong>    "LH"                      
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"         
    <strong>Link mass [kg]                         </strong>    "0.070322 0.15697 0.2072" 
    <strong>Maximum joint torque [Nm]              </strong>    "1.90707 16.5645 58.4529" 
    <strong>Maximum joint speed [rad/s]            </strong>    "0.7409 6.9755 8.0103"    
    <strong>Maximum mechanical power [W]           </strong>    "0.600376 46.7055 52.9366"
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.29569 16.3603 52.8452" 
    <strong>Cost of transport                      </strong>    "0.09799"                 
    <strong>Power quality                          </strong>    "5857722.1173"            
    <strong>Joint angle range [rad]                </strong>    "0.075026 0.56287 0.6364" 
    <strong>Transmission gear ratio                </strong>    "1 1 1"                   
    <strong>Joint spring constants                 </strong>    "0 0 0"                   


T =

  12×1 <a href="matlab:helpPopup table" style="font-weight:bold">table</a>

                                               <strong>       Nominal_Leg        </strong>
                                               <strong>__________________________</strong>

    <strong>Leg                                    </strong>    "RH"                      
    <strong>Link lengths [m]                       </strong>    "0.112 0.25 0.33"         
    <strong>Link mass [kg]                         </strong>    "0.070322 0.15697 0.2072" 
    <strong>Maximum joint torque [Nm]              </strong>    "1.90338 16.2175 55.4021" 
    <strong>Maximum joint speed [rad/s]            </strong>    "0.72385 6.7469 7.9264"   
    <strong>Maximum mechanical power [W]           </strong>    "0.603235 42.2474 61.5003"
    <strong>Mechanical energy consumption [J/cycle]</strong>    "0.277541 15.2449 59.5818"
    <strong>Cost of transport                      </strong>    "0.10579"                 
    <strong>Power quality                          </strong>    "6877987.8365"            
    <strong>Joint angle range [rad]                </strong>    "0.066762 0.54227 0.71757"
    <strong>Transmission gear ratio                </strong>    "1 1 1"                   
    <strong>Joint spring constants                 </strong>    "0 0 0"                   

Done.
